#
# BEGIN DEFAULT CONFIGURATION (for reference)
#
# If you customize this file you are recommended to make changes at the end of the file after the END DEFAULT CONFIGURATION marker
#

#server.onpremise=true
#server.stencil.custom.allowed=true
#server.contextroot=/activiti-app
#
##
## LICENSE
##
#
## If no license is available on first bootstrap this property decides if system will go into single or multi tenant mode
#license.multi-tenant=false
#
## If no license is available on first bootstrap this property decides the name of the default tenant
#license.default-tenant=tenant
#
## Decides if license uploads should be allowed in the system or not
#license.allow-upload=true
#
##
## DATABASE
##
#
## JNDI CONFIG
#
## If uncommented, the datasource will be looked up using the configured JNDI name.
## This will have preference over any datasource configuration done below that doesn't use JNDI
##
## Eg for JBoss: java:jboss/datasources/activitiDS
##
##datasource.jndi.name=jdbc/activitiDS
#
## Set whether the lookup occurs in a J2EE container, i.e. if the prefix "java:comp/env/" needs to be added if the JNDI
## name doesn't already contain it. Default is "true".
##datasource.jndi.resourceRef=true
#
## REGULAR DATASOURCE CONFIG (not using jndi)
#
#datasource.driver=org.h2.Driver
#datasource.url=jdbc:h2:tcp://localhost:9092/activiti
#datasource.username=alfresco
#datasource.password=alfresco
#
##datasource.driver=com.mysql.jdbc.Driver
##datasource.url=jdbc:mysql://127.0.0.1:3306/modeler?characterEncoding=UTF-8
#
##datasource.driver=org.postgresql.Driver
##datasource.url=jdbc:postgresql://localhost:5432/activiti
#
##datasource.driver=oracle.jdbc.driver.OracleDriver
##datasource.url=jdbc:oracle:thin:@localhost:1521:activiti
#
##datasource.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
##datasource.url=jdbc:sqlserver://localhost:1433;databaseName=activiti
#
##datasource.driver=com.ibm.db2.jcc.DB2Driver
##datasource.url=jdbc:db2://localhost:50000/activiti
#
#hibernate.dialect=org.hibernate.dialect.H2Dialect
##hibernate.dialect=org.hibernate.dialect.MySQLDialect
##hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
##hibernate.dialect=org.hibernate.dialect.SQLServerDialect
##hibernate.dialect=org.hibernate.dialect.DB2Dialect
##hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
##hibernate.show_sql=false
##hibernate.generate_statistics=false
#
##
## Connection pool (see http://www.mchange.com/projects/c3p0/#configuration)
##
#
##datasource.min-pool-size=5
##datasource.max-pool-size=100
##datasource.acquire-increment=5
## test query for H2, MySQL, PostgreSQL and Microsoft SQL Server
##datasource.preferred-test-query=select 1
## test query for Oracle
##datasource.preferred-test-query=SELECT 1 FROM DUAL
## test query for DB2
##datasource.preferred-test-query=SELECT current date FROM sysibm.sysdummy1
##datasource.test-connection-on-checkin=true
##datasource.test-connection-on-checkout=true
##datasource.max-idle-time=1800
##datasource.max-idle-time-excess-connections=1800
#
##
## ACTIVITI
##
#
#activiti.process-definitions.cache.max=128
#
## Activiti cluster config
#cluster.enable=true
#cluster.config.adminapp.url=http://aps-admin:8080/activiti-admin
#cluster.config.name=development
#cluster.config.username=dev
#cluster.config.password=dev
#cluster.config.metricsendinginterval=30
#
## The app independently sends data from the engine to the admin app
## By default every 30 seconds. Note that this a cron expression (vs just the seconds in the engine metrics interval config)
##cluster.config.app.metricsendingcronexpression=0/30 * * * * ?
#
## Disable (via the tenant-admin-only engine API REST api) serializable java objects (as this might open up security problems)
#rest.variables.allow.serializable=false
#
##
## SECURITY
##
#
#
##password min length
#security.password.constraints.min-length=8
#security.password.constraints.reg-exp=^(?=.*[a-z])(?=.*[A-Z]).+$
#
## USER TOKEN TTL
## after how long the token should expire
## security.cookie.max-age=1800
## how often the cookie get controlled
## security.cookie.database-removal.cronExpression=0 0/10 * * * ?
#
## SIGN UP TO THE APP
#security.signup.disabled=true
#
## security configuration, used for authentication (this key should be unique for your application, and kept secret)
#security.rememberme.key=somekey
#
## Passwords for non-OAuth services (eg. on-premise alfresco) are encrypted using AES/CBC/PKCS5PADDING
## It needs a 128-bit initialization vector (http://en.wikipedia.org/wiki/Initialization_vector) and a 128-bit secret key
## represented as 16 ascii characters below
#security.encryption.ivspec=9kje56fqwX8lk1Z0
#security.encryption.secret=wTy53pl09aN4iOkL
#
#security.asposeKey=OMRE0aMxouti2Cb7asnLrbAVkn32WMe3RTbDH44p8hUtjbaFC+V/MedBApNCa+b8
#
##
## CORS CONFIGURATION
##
cors.enabled=${docker.aps.database.cors.enabled}
security.csrf.disabled=${docker.aps.database.csrf.disabled}

#cors.allowed.origins=*
#cors.allowed.methods=GET,POST,HEAD,OPTIONS,PUT,DELETE
#cors.allowed.headers=Authorization,Content-Type,Cache-Control,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
#cors.exposed.headers=Access-Control-Allow-Origin,Access-Control-Allow-Credentials
#cors.support.credentials=true
#cors.preflight.maxage=10
#
##
## Metrics CONFIGURATION
##
#
## Console reporter: metrics are written to the console every xx seconds (interval setting)
#metrics.console.reporter.enabled=false
##metrics.console.reporter.interval=60
#
##
## ELASTIC SEARCH CONFIGURATION
##
#
## Determines how ES deployment looks like.
##
## Possible options:
##
## * none/uncommented : nothing related to ES will be started or configured
## * embedded (default): the app itself boots an elastic search node that is capable of storing data.
##                       Note that the 'elastic-search.data.path' is mandatory when using this setup.
## * client: an elastic search cluster, external to this app, exists.
##
## Note that for analytics to work, you need an elastic search client defined.
##
#
## ##################
## ES General settings
## ##################
#elastic-search.cluster.name=activiti-elastic-search-cluster
#
## Must be a unique name in the elastic search cluster
#elastic-search.node.name=activiti
#
#elastic-search.default.index.name=activiti
#elastic-search.tenant.index.prefix=activiti_tenant_
#
## Enable/disable the REST API of the embedded ES node
#elastic-search.enable.http=false
#elastic-search.enable.http.cors=false
#
## ES discovery settings using multicast
##elastic-search.discovery.type=multicast
##elastic-search.discovery.multicast.group=224.2.2.4
##elastic-search.discovery.multicast.port=54328
##elastic-search.discovery.multicast.ttl=3
##elastic-search.discovery.multicast.address=
#
## ES disovery settings using unicast
##elastic-search.discovery.type=unicast
##elastic-search.discovery.hosts=
#
#
## ################
## Embedded config
## ################
#
#elastic-search.server.type=embedded
#elastic-search.data.path=$user_home$/activiti-elastic-search-data
#
## #################################
## Client setup (example)
## #################################
#
##elastic-search.server.type=client
#
##
## EVENT PROCESSING TWEAKING
## (DB -> Elastic Search)
##
#
## Set to false if no Activiti events need to be generated.
## Do note that the reporting/analytics data is then lost forever.
#event.generation.enabled=true
#
## Set to false to not to event processing. This could be useful
## in a clustered setup where only sone nodes do the processing
#event.processing.enabled=true
#
## The amount of events that are tried to be locked and processed in one go
#event.processing.blocksize=100
#
## The cron expression that defines how often the events generated by the Activiti process engine are
## processed (= read from the database and fed into Elastic Search). By default every 5 seconds.
#event.processing.cronExpression=0/5 * * * * ?
#
## The cron expression that defines how often 'expired' events are processed. These are events
## that were locked, but never processed (maybe the node processing them went down).
## By default every 30 minutes.
#event.processing.expired.cronExpression=0 0/30 * * * ?
#
## The maximum time an event is considered 'locked'. After that it can be taken by another processing thread
##event.processing.max.locktime=600000
#
## Possible options:
## - 'move': the processed events are moved to another db table to keep the event log table small and snappy
## - 'delete': the processed events are deleted
##
## Comment this line out to do nothing: events are kept in the original table as-is
#event.processing.processed.events.action=move
#
## The cron expression that defines how often the action defined above happens
## By default every 20 minutes.
#event.processing.processed.action.cronExpression=0 25/45 * * * ?
#
##
## DEFAULT ADMINISTRATOR ACCOUNT
##
#admin.email=admin@app.activiti.com
#admin.passwordHash=25a463679c56c474f20d8f592e899ef4cb3f79177c19e3782ed827b5c0135c466256f1e7b60e576e
#admin.lastname=Administrator
#
#admin.group=Superusers
#
##
## EMAIL
##
#
##email.enabled=true
##email.host=localhost
##email.port=1025
##email.useCredentials=false
##email.username=
##email.password=
#
## The base url that will be used to create urls in emails.
##email.base.url=http://localhost:8888
#
##email.from.default=no-reply@activiti.alfresco.com
##email.from.default.name=Activiti
##email.feedback.default=activiti@alfresco.com
#
##
## APP SETTINGS
##
##
## The following settings configure app access when a new user is created in the system (manuall or through LDAP sync).
## To enable access, set the property 'app.[APP-NAME].default.enabled' to 'true'. If 'true', a newly created user will
## be given access to this app.
##
## The access is configured by adding the user to a group with a certain capability that enabled the app.
## The name of that group can be configured using the 'app.[APP-NAME].default.capabilities.group' property. If this
## property is set, and the 'app.[APP-NAME].default.enabled property' is set to 'true', the group with this name will be used
## to add the user to and provide access to the app. If the group does not exist, it is created.
## If the property is commented, and 'app.[APP-NAME].default.enabled property', a default name is used.
##
## Currently possible app names: { analytics | kickstart }
##
#
#app.analytics.default.enabled=true
#app.analytics.default.capabilities.group=analytics-users
#
#app.kickstart.default.enabled=true
#
#app.kickstart.default.capabilities.group=app-designer-users
#
## The following setting, if set to 'true', will create a default example app with some
## simple review and approve processes for every newly created user.
#app.review-workflows.enabled=false
#
##
## ALFRESCO CLOUD CONNECTOR
##
## Register for a Cloud API key at developer.alfresco.com
#alfresco.cloud.disabled=true
#alfresco.cloud.clientId=YourIdHere
#alfresco.cloud.secret=YourSecretHere
#alfresco.cloud.redirectUri=http://localhost:8080/activiti-app/app/rest/integration/alfresco-cloud/confirm-auth-request
#
##
## FILE UPLOAD
##
#
## The maximum file upload limit. Set to -1 to set to 'no limit'. Expressed in bytes
#file.upload.max.size=104857600
#
##
## CONTENT STORAGE
##
#
## File system configuration, requires rootFolder. Depth and blockSize are optional and revert to 4 and 1024 respectively,
## resulting in 1,099,511,627,776 possible content files in the tree (4 levels deep, max 1024 entries/folder)
#
## For development purposes, data folder is created inside the sources ./data folder
#contentstorage.fs.rootFolder=data/
#contentstorage.fs.createRoot=true
#contentstorage.fs.depth=4
#contentstorage.fs.blockSize=1024
#
## Google drive OAuth configuration
#googledrive.web.disabled=true
#googledrive.web.auth_uri=https://accounts.google.com/o/oauth2/auth
#googledrive.web.client_secret=RegisterWithGoogleForYourSecret
#googledrive.web.token_uri=https://accounts.google.com/o/oauth2/token
#googledrive.web.client_email=RegisterWithGoogleForYourEmail
#googledrive.web.redirect_uris=http://localhost:8080/activiti-app/app/rest/integration/google-drive/confirm-auth-request
#googledrive.web.client_x509_cert_url=RegisterWithGoogleForYourCert
#googledrive.web.client_id=RegisterWithGoogleForYourClientId
#googledrive.web.auth_provider_x509_cert_url=https://www.googleapis.com/oauth2/v1/certs
#googledrive.web.javascript_origins=http://localhost:8080/activiti-app
#
#
## Box OAuth configuration
#box.disabled=true
#box.web.auth_uri=https://app.box.com/api/oauth2/authorize
#box.web.client_id=RegisterWithBoxForYourClientId
#box.web.client_secret=RegisterWithBoxForYourSecret
#box.web.javascript_origins=http://localhost:9999
#box.web.token_uri=https://app.box.com/api/oauth2/token
#box.web.redirect_uris=http://localhost:9999/activiti-app/app/rest/integration/box/confirm-auth-request
#box.upload.retry.maxAttempts=4
#box.upload.retry.delay=1000
#
#
#
##
## Internal caches
##
## Note: age is expressed in seconds
##
##cache.forms.max.size=1000
#
##cache.users.max.size=2048
##cache.users.max.age=86400
#
##cache.login-tokes.max.size=2048
##cache.login-tokens.max.age=10
#
#
## Validator config
#validator.editor.bpmn.disable.executionlistener=false
#validator.editor.bpmn.disable.cameltask=false
#validator.editor.bpmn.disable.muletask=false
#validator.editor.bpmn.disable.mailtask=false
#validator.editor.bpmn.disable.scripttask=true
#validator.editor.bpmn.disable.scripttask.groovy=true
#validator.editor.bpmn.disable.manualtask=false
#validator.editor.bpmn.disable.businessruletask=false
#validator.editor.bpmn.disable.servicetask=false
#validator.editor.bpmn.disable.intermediatethrowevent=false
#validator.editor.bpmn.disable.startevent.timer=false
#validator.editor.bpmn.disable.startevent.signal=false
#validator.editor.bpmn.disable.startevent.message=false
#validator.editor.bpmn.disable.startevent.error=false
#validator.editor.bpmn.disable.startevent.timecycle=false
#validator.editor.bpmn.disable.loopback=false
#validator.editor.bpmn.limit.servicetask.only-class=false
#validator.editor.bpmn.limit.multiinstance.loop=false
#validator.editor.bpmn.limit.usertask.assignment.only-idm=false
#
## Note that by default DMN expressions are validated.
## When set to 'false', the expressions can be free-form, but validation of correctness is lost.
#validator.editor.dmn.expression=true
#
## Property to disable the possibility to define javascript events in the form builder
#editor.form.javascript.disable=false
#
##can edit forms
#involved-users.can-edit-forms=true
#
## Javascript secure scripting configuration
#javascript.secure-scripting.enabled=false
## only classes in activiti/javascript-whitelist-classes.conf will be allowed
#javascript.secure-scripting.enable-class-whitelisting=true
## max stack depth to avoid stackoverflow exceptions
#javascript.secure-scripting.max-stack-depth=100
## max execution time in milliseconds
#javascript.secure-scripting.max-execution-time=3000
## max memory in bytes (eg. 5242880 = 5MB)
#javascript.secure-scripting.max-memory=5242880
## number instructions to execute before checking max memory & max execution time
#javascript.secure-scripting.instructions-before-callback=100
#
## Beans whitelisting
#beans.whitelisting.enabled=true
#
## EL whitelisting
#el.whitelisting.enabled=true

#
# END DEFAULT CONFIGURATION
#


#
# Overrides specific to the installer appear below - ADD YOUR CHANGES HERE
#

datasource.driver=${docker.aps.database.driver}
datasource.url=${docker.aps.database.url}
datasource.username=${docker.aps.database.username}
datasource.password=${docker.aps.database.password}

hibernate.dialect=${docker.aps.database.dialect}

# Activiti cluster config
cluster.enable=true
cluster.config.adminapp.url=http://aps-admin:8081/activiti-admin
cluster.config.name=development
cluster.config.username=dev
cluster.config.password=dev
cluster.config.metricsendinginterval=30

# The app independently sends data from the engine to the admin app
# By default every 30 seconds. Note that this a cron expression (vs just the seconds in the engine metrics interval config)
#cluster.config.app.metricsendingcronexpression=0/30 * * * * ?

#
# ELASTIC SEARCH CONFIGURATION
#

elastic-search.server.type=${docker.aps.es.server.type}
elastic-search.rest-client.address=${docker.aps.es.server.address}
elastic-search.rest-client.port=${docker.aps.es.server.port}
elastic-search.rest-client.schema=http
elastic-search.rest-client.connect-timeout=1000
elastic-search.rest-client.socket-timeout=5000
elastic-search.rest-client.auth.enabled=false
elastic-search.rest-client.username=admin
elastic-search.rest-client.password=esadmin
elastic-search.default.index.name=activiti
elastic-search.tenant.index.prefix=activiti-tenant

#
# EMAIL
#
email.base.url=http://localhost:8081

##
## ALFRESCO CLOUD CONNECTOR
##
## Register for a Cloud API key at developer.alfresco.com
#alfresco.cloud.disabled=true
#alfresco.cloud.clientId=YourIdHere
#alfresco.cloud.secret=YourSecretHere
#alfresco.cloud.redirectUri=http://localhost:8080/activiti-app/app/rest/integration/alfresco-cloud/confirm-auth-request

#
# CONTENT STORAGE
#
contentstorage.fs.rootFolder=/act_data

# Google drive OAuth configuration
#googledrive.web.disabled=true
#googledrive.web.client_secret=RegisterWithGoogleForYourSecret
#googledrive.web.client_email=RegisterWithGoogleForYourEmail
#googledrive.web.redirect_uris=http://localhost:8080/activiti-app/app/rest/integration/google-drive/confirm-auth-request
#googledrive.web.client_x509_cert_url=RegisterWithGoogleForYourCert
#googledrive.web.client_id=RegisterWithGoogleForYourClientId
#googledrive.web.javascript_origins=http://localhost:8080/activiti-app

# Box OAuth configuration
box.disabled=true
#box.web.client_id=RegisterWithBoxForYourClientId
#box.web.client_secret=RegisterWithBoxForYourSecret
#box.web.javascript_origins=http://localhost:8081
#box.web.redirect_uris=http://localhost:8081/activiti-app/app/rest/integration/box/confirm-auth-request

# Validator config
# Decision Tables
validator.editor.dmn.expression=false

#
# SECURITY SETTINGS
#

# Disable scripting
validator.editor.bpmn.disable.scripttask=false
validator.editor.bpmn.disable.scripttask.groovy=false

# Beans whitelisting
beans.whitelisting.enabled=false

# EL whitelisting
el.whitelisting.enabled=false

#shell command whitelisting
shell.whitelisting.enabled=false
service.task.class.whitelisting.enabled=false

##
## EVENT PROCESSING TWEAKING
## (DB -> Elastic Search)
##
#
## Set to false if no Activiti events need to be generated.
## Do note that the reporting/analytics data is then lost forever.
event.generation.enabled=true

#
## Set to false to not to event processing. This could be useful
## in a clustered setup where only sone nodes do the processing
event.processing.enabled=true
#
## The amount of events that are tried to be locked and processed in one go
#event.processing.blocksize=100
#
## The cron expression that defines how often the events generated by the Activiti process engine are
## processed (= read from the database and fed into Elastic Search). By default every 5 seconds.
event.processing.cronExpression=0/5 * * * * ?
#
## The cron expression that defines how often 'expired' events are processed. These are events
## that were locked, but never processed (maybe the node processing them went down).
## By default every 30 minutes.
event.processing.expired.cronExpression=0 0/30 * * * ?
#
## The maximum time an event is considered 'locked'. After that it can be taken by another processing thread
##event.processing.max.locktime=600000
#
## Possible options:
## - 'move': the processed events are moved to another db table to keep the event log table small and snappy
## - 'delete': the processed events are deleted
##
## Comment this line out to do nothing: events are kept in the original table as-is
#event.processing.processed.events.action=move
#
## The cron expression that defines how often the action defined above happens
## By default every 20 minutes.
#event.processing.processed.action.cronExpression=0 25/45 * * * ?
